package main
/* В данном примере мы конкурентно рассчитает значение квадратов
значений взятых из массива (2,4,6,8,10) и выведет их квадраты в stdout.*/
import (
	"fmt"
	"math"
	"sync"
)
func main() {
	// Воспользуемся sync.WaitGroup для ожидания завершения нескольких goroutine
	wg:=&sync.WaitGroup{}
	// Создадим массив с данными
    mas:=[...]float64{2,4,6,8,10}
    // Пройдем по массиву, применяя функцию к каждому элементу. Выполним эту функцию в отдельной горутине
    for _,v:=range mas{
	    wg.Add(1) // Увеличиваем WaitGroup счетчик
		go func(v float64,wg *sync.WaitGroup){
			defer wg.Done() //Уменьшаем счетчик, когда горутина завершится
			fmt.Println(math.Pow(v,2))}(v,wg)
	}
	wg.Wait() // Ожидаем выполнения работы всех горутин
	fmt.Println("Все горутины выполнили свою работу!")
}
